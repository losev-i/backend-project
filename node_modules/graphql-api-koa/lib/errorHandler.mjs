import { formatError } from 'graphql'
import { createHttpError } from './createHttpError'
export const errorHandler = () => async (ctx, next) => {
  try {
    await next()
  } catch (error) {
    let httpError = createHttpError(error)
    if (!httpError.expose) httpError = createHttpError()
    ctx.response.status = httpError.status
    if (!ctx.response.body) ctx.response.body = {}
    ctx.response.body.errors = Array.isArray(httpError.graphqlErrors)
      ? httpError.graphqlErrors.map(graphqlError => {
          const formattedError = formatError(graphqlError)
          if (graphqlError.originalError && !graphqlError.originalError.expose)
            formattedError.message = 'Internal Server Error'
          return formattedError
        })
      : [formatError(httpError)]
    ctx.app.emit('error', error, ctx)
  }
}
