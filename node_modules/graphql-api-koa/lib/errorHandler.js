'use strict'

exports.__esModule = true
exports.errorHandler = void 0

var _graphql = require('graphql')

var _createHttpError = require('./createHttpError')

const errorHandler = () => async (ctx, next) => {
  try {
    await next()
  } catch (error) {
    let httpError = (0, _createHttpError.createHttpError)(error)
    if (!httpError.expose) httpError = (0, _createHttpError.createHttpError)()
    ctx.response.status = httpError.status
    if (!ctx.response.body) ctx.response.body = {}
    ctx.response.body.errors = Array.isArray(httpError.graphqlErrors)
      ? httpError.graphqlErrors.map(graphqlError => {
          const formattedError = (0, _graphql.formatError)(graphqlError)
          if (graphqlError.originalError && !graphqlError.originalError.expose)
            formattedError.message = 'Internal Server Error'
          return formattedError
        })
      : [(0, _graphql.formatError)(httpError)]
    ctx.app.emit('error', error, ctx)
  }
}

exports.errorHandler = errorHandler
